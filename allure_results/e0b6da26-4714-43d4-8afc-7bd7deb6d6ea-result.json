{"name": "Проверка кликов по логотипам", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_order.TestOrder object at 0x000002D662E3D9C0>\n\n    @allure.title(\"Проверка кликов по логотипам\")\n    def test_logo_click(self):\n        main_page = MainPage(self.driver)\n        main_page.open_page(\"https://qa-scooter.praktikum-services.ru/\")\n        main_page.click_logo_scooter()\n        assert main_page.get_url(\"praktikum\") == \"https://qa-scooter.praktikum-services.ru/\"\n        main_page.click_logo_yandex(1)\n>       assert main_page.get_url(\"yandex\") == \"https://yandex.ru\"\n\ntests\\test_order.py:79: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\main.py:23: in get_url\n    WebDriverWait(self.driver, timeout=5).until(ec.url_contains(url))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"bd1deb1e-33b3-4b07-a43f-4df4ab13096d\")>\nmethod = <function url_contains.<locals>._predicate at 0x000002D662E523B0>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:90: TimeoutException"}, "steps": [{"name": "Открываем страницу по URL", "status": "passed", "parameters": [{"name": "host", "value": "'https://qa-scooter.praktikum-services.ru/'"}], "start": 1663432360808, "stop": 1663432360931}, {"name": "Нажимаем логотип Самокат", "status": "passed", "start": 1663432360931, "stop": 1663432361150}, {"name": "Получаем значение URL", "status": "passed", "parameters": [{"name": "url", "value": "'praktikum'"}], "start": 1663432361150, "stop": 1663432361152}, {"name": "Нажимаем логотип Yandex", "status": "passed", "parameters": [{"name": "tab", "value": "1"}], "start": 1663432361152, "stop": 1663432361400}, {"name": "Получаем значение URL", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"D:\\_python\\Sprint_4\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"D:\\_python\\Sprint_4\\pages\\main.py\", line 23, in get_url\n    WebDriverWait(self.driver, timeout=5).until(ec.url_contains(url))\n  File \"D:\\_python\\Sprint_4\\venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 90, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "parameters": [{"name": "url", "value": "'yandex'"}], "start": 1663432361400, "stop": 1663432366519}], "start": 1663432360808, "stop": 1663432366527, "uuid": "38ef4028-7364-4382-bd1d-56351f03805e", "historyId": "d889edffe5525dbb145475b58894b940", "testCaseId": "e1aa6a0456d844df1057d18e36caacdb", "fullName": "tests.test_order.TestOrder#test_logo_click", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_order"}, {"name": "subSuite", "value": "TestOrder"}, {"name": "host", "value": "dark-pc"}, {"name": "thread", "value": "20516-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order"}]}